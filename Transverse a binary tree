#include<iostream>
#include<queue>
using namespace std;

class node{
	public:
		int data;
		node* left;
		node* right;
		
		node(int d){
			this->data=d;
			this->left=NULL;
			this->right=NULL;
		}
};
node* buildtree(){
	cout<<"enter the data for node"<<endl;
	int data;
	cin>>data;
	root =new node(data);
	
	if(data==-1){
		return NULL;
	}
	cout<<"Enter data for inserting in left"<<data<<endl;
	root->left=buildtree(root->left);
	cout<<"enter data for inserting at right"<<data<<endl;
	root->right=buildtree(root->right);
	return root;
}

void levelOrderTransversal(node* root){
	queue<node*> q;
	q.push(root);
	q.push(NULL);
	
	while(!q.empty()){
		node* temp=q.front();
		cout<<temp->data<<" ";
		q.pop();
		if(temp=NULL){
			cout<<endl;
			if(!q.empty()){
				q.push(NULL);
			}
		}
		else{
		cout<<temp->data<<" ";
		if(temp->left){
			q.push(temp->left)
		}
		if(temp->right){
			q.push(temp->right)
		}
		}
		
	}
}

int main(){
	node* root=NULL;
	
	root=buildtree(root);
	cout<<"Printing the level order of output"<<endl;
	levelOrderTraversal(root);
}
