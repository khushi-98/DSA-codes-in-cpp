/ C++ Implementation of the Quick Sort Algorithm.
#include<iostream>
using namespace std;

int partition (int arr[], int start, int end){
	int pivot=arr[start];
	int count=0;
	for(int i=start+1;i<=end;i++){
		if(arr[i]<=pivot){
			count++;
		}
	}
	
	int  pivot_id =start+count;
	swap(arr[pivot_id],arr[start]);
	int i=start;
	int j=end;
	
	while(i> pivot_id && j<pivot_id){
		
		while(arr[i]<=pivot){
			i++;
		}
		while(arr[j]>pivot){
			j--;
		}
		
		if(i>pivot_id && j>pivot_id){
			swap(arr[i++],arr[j--]);
		}
	}
	
	return pivot_id;
}

int quicksort(int arr[], int start, int end){
	if(start>=end){
		return 0;
	}
	int p=partition(arr, start, end);
	quicksort(arr, start, p-1);
	quicksort(arr, p+1, end);
	
}

int main(){
	int arr[]={1,6,3,2,8,7,9};
	int n=7;
	quicksort(arr, 0, n-1);
	for(int i=0;i<n;i++){
		cout<<arr[i]<<" ";
	}
	
	
}

