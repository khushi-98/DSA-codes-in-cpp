#include <iostream>
#include <map>
using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

void verticalTraversal(TreeNode* root, int hd, map<int, vector<int>>& m) {
    if (root == nullptr)
        return;

    m[hd].push_back(root->val);


    verticalTraversal(root->left, hd - 1, m);

    verticalTraversal(root->right, hd + 1, m);
}

void verticalOrder(TreeNode* root) {
  
    map<int, vector<int>> m;

    verticalTraversal(root, 0, m);

    for (auto it = m.begin(); it != m.end(); it++) {
        for (int i = 0; i < it->second.size(); i++) {
            cout << it->second[i] << " ";
        }
        cout << endl;
    }
}

int main() {

    TreeNode* root = new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    root->right->right = new TreeNode(7);


    verticalOrder(root);

    return 0;
}
